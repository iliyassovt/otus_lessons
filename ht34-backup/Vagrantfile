# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']


MACHINES = {
  :server => {
    :box_name => "centos/7",
    :ip_addr => {ip: "192.168.50.1", virtualbox__intnet: "dns"},
    :disks => {
      :sata1 => {
        :dfile => home + '/VirtualBox VMs/disks/sata1.vdi',
        :size => 2048, # Megabytes
        :port => 1
      }

    } 
  },
  :client => {
    :box_name => "centos/7",
    :ip_addr => {ip: "192.168.50.11", virtualbox__intnet: "dns"},
    :disks => {
      

    } 
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "1024"]
                  needsController = false
                  boxconfig[:disks].each do |dname, dconf|
                  unless File.exist?(dconf[:dfile])
                    vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                                needsController =  true
                          end

                  end
                  if needsController == true
                     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                     boxconfig[:disks].each do |dname, dconf|
                         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                     end
                  end
          end
          case boxname.to_s
          when "client"
            box.vm.provision "shell", path: "borg.sh"
          end
          box.vm.provision "shell", inline: <<-SHELL
              mkdir -p ~root/.ssh
                    cp ~vagrant/.ssh/auth* ~root/.ssh
              
            SHELL



    #config.vm.provision "shell", path: "create_raid10.sh"

      end
  end

  config.vm.provision "ansible" do |ansible|
    ansible.verbose = "vvv"
    ansible.playbook = "provisioning/playbook.yml"
    ansible.sudo = "true"
  end
  
end
